import authenticate from 'common/factories/chains/authenticate';
import track from 'common/factories/chains/track';
import createSession from 'common/factories/chains/createSession';

import courseOpened from './signals/courseOpened';
import courseAppClicked from './signals/appClicked';
import addFileClicked from './signals/addFileClicked';
import codeChanged from './signals/codeChanged';
import showPreviewClicked from './signals/showPreviewClicked';
import showConsoleClicked from './signals/showConsoleClicked';
import fileClicked from './signals/fileClicked';
import addFileAborted from './signals/addFileAborted';
import editAssignmentClicked from './signals/editAssignmentClicked';
import assignmentCodeChanged from './signals/assignmentCodeChanged';
import assignmentDescriptionChanged from './signals/assignmentDescriptionChanged';
import addFileSubmitted from './signals/addFileSubmitted';
import recordClicked from './signals/recordClicked';
import stopClicked from './signals/stopClicked';
import playClicked from './signals/playClicked';
import saveSceneClicked from './signals/saveSceneClicked';
import configureScenesClicked from './signals/configureScenesClicked';
import addSceneSubmitted from './signals/addSceneSubmitted';
import sceneNameClicked from './signals/sceneNameClicked';
import listSceneNameClicked from './signals/listSceneNameClicked';
import uploadClicked from './signals/uploadClicked';
import uploadFinished from './signals/uploadFinished';
import uploadFailed from './signals/uploadFailed';
import removeFileClicked from './signals/removeFileClicked';
import newSceneNameChanged from './signals/newSceneNameChanged';
import sandboxTested from './signals/sandboxTested';
import addFileNameUpdated from './signals/addFileNameUpdated';
import pauseClicked from './signals/pauseClicked';
import mediaLoaded from './signals/mediaLoaded';
import videoStartedBuffering from './signals/videoStartedBuffering';
import videoFailed from './signals/videoFailed';
import codeCursorChanged from './signals/codeCursorChanged';
import seekChanged from './signals/seekChanged';
import buttonPopoverClicked from './signals/buttonPopoverClicked';
import sandboxClicked from './signals/sandboxClicked';
import videoBuffered from './signals/videoBuffered';
import toggleForceUserClicked from './signals/toggleForceUserClicked';
import newAssignmentClicked from './signals/newAssignmentClicked';
import assignmentClicked from './signals/assignmentClicked';
import runAssignmentClicked from './signals/runAssignmentClicked';

export default function(controller) {
  controller.signal('course.courseOpened', createSession('course.courseOpened', authenticate(courseOpened)));
  controller.signal('course.appClicked', courseAppClicked);
  controller.signal('course.addFileClicked', track('course.addFileClicked', addFileClicked));
  controller.signal('course.codeChanged', codeChanged);
  controller.signal('course.showPreviewClicked', track('course.showPreviewClicked', showPreviewClicked));
  controller.signal('course.showConsoleClicked', track('course.showConsoleClicked', showConsoleClicked));
  controller.signal('course.fileClicked', track('course.fileClicked', fileClicked));
  controller.signal('course.addFileAborted', track('course.addFileAborted', addFileAborted));
  controller.signal('course.editAssignmentClicked', editAssignmentClicked);
  controller.signal('course.assignmentCodeChanged', assignmentCodeChanged);
  controller.signal('course.assignmentDescriptionChanged', assignmentDescriptionChanged);
  controller.signal('course.addFileSubmitted', track('course.addFileSubmitted', addFileSubmitted));
  controller.signal('course.recordClicked', recordClicked);
  controller.signal('course.playClicked', track('course.playClicked', playClicked));
  controller.signal('course.stopClicked', stopClicked);
  controller.signal('course.saveShortcutPressed', track('course.saveShortcutPressed', saveSceneClicked));
  controller.signal('course.saveSceneClicked', track('course.saveSceneClicked', saveSceneClicked));
  controller.signal('course.configureScenesClicked', configureScenesClicked);
  controller.signal('course.addSceneSubmitted', addSceneSubmitted);
  controller.signal('course.sceneNameClicked', track('course.sceneNameClicked', sceneNameClicked));
  controller.signal('course.listSceneNameClicked', track('course.listSceneNameClicked', listSceneNameClicked));
  controller.signal('course.uploadClicked', uploadClicked);
  controller.signal('course.uploadFinished', uploadFinished);
  controller.signal('course.uploadFailed', uploadFailed);
  controller.signal('course.removeFileClicked', track('course.removeFileClicked', removeFileClicked));
  controller.signal('course.newSceneNameChanged', newSceneNameChanged);
  controller.signal('course.sandboxTested', track('course.sandboxTested', sandboxTested));
  controller.signal('course.addFileNameUpdated', addFileNameUpdated);
  controller.signal('course.pauseClicked', track('course.pauseClicked', pauseClicked));
  controller.signal('course.mediaLoaded', track('course.mediaLoaded', mediaLoaded));
  controller.signal('course.videoStartedBuffering', track('course.videoStartedBuffering', videoStartedBuffering));
  controller.signal('course.videoFailed', track('course.videoFailed', videoFailed));
  controller.signal('course.codeCursorChanged', codeCursorChanged);
  controller.signal('course.seekChanged', track('course.seeked', seekChanged));
  controller.signal('course.buttonPopoverClicked', buttonPopoverClicked);
  controller.signal('course.sandboxClicked', track('course.sandboxClicked', sandboxClicked));
  controller.signal('course.videoBuffered', track('course.videoBuffered', videoBuffered));
  controller.signal('course.toggleForceUserClicked', toggleForceUserClicked);
  controller.signal('course.newAssignmentClicked', newAssignmentClicked);
  controller.signal('course.assignmentClicked', track('course.assignmentClicked', assignmentClicked));
  controller.signal('course.runAssignmentClicked', track('course.runAssignmentClicked', runAssignmentClicked));
}
